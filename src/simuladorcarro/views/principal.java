/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package simuladorcarro.views;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import simuladorcarro.exceptions.AccidenteExcepcion;
import simuladorcarro.exceptions.ApagadoExcepcion;
import simuladorcarro.exceptions.EncendidoExcepcion;
import simuladorcarro.exceptions.FrenadoConPatinajeExcepcion;
import simuladorcarro.exceptions.PatinajeExcepcion;
import simuladorcarro.models.Vehiculo;

/**
 * Ventana principal del simulador de vehículos.
 * 
 * Esta clase representa la interfaz gráfica principal del simulador, que permite:
 * 
 *  Encender y apagar el vehículo
 *   Acelerar y frenar
 *   Mostrar información del estado actual del vehículo
 *   Gestionar las interacciones del usuario con el sistema
 * 
 * 
 * La interfaz incluye botones para las acciones principales y un panel de información
 * que muestra datos del motor, llantas y velocidad actual
 * 
 * @author SOFIA RUDAS
 * @version 1.0.0
 * @since 12042025
 */
public class principal extends javax.swing.JFrame {

    private Vehiculo vehiculo;
    
    /**
     * Crea una nueva ventana principal del simulador.
     * 
     * @param vehiculo El vehículo que será controlado por esta interfaz
     */
    public principal(Vehiculo vehiculo) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.vehiculo = vehiculo;
        actualizarInfoMotor();
        actualizarInfoLlantas();
        try{
            this.setIconImage(new ImageIcon(getClass().getResource("/simuladorcarro/images/logo.png")).getImage());
            
        }catch(Exception e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        encender = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        apagar = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        acelerar = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        frenar = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        infoMotor = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        infoLlantas = new javax.swing.JLabel();
        infoVelocidad = new javax.swing.JLabel();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(18, 21, 25));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simuladorcarro/images/carro.png"))); // NOI18N

        encender.setBackground(new java.awt.Color(18, 21, 25));
        encender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encenderMouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simuladorcarro/images/prender (1).png"))); // NOI18N

        javax.swing.GroupLayout encenderLayout = new javax.swing.GroupLayout(encender);
        encender.setLayout(encenderLayout);
        encenderLayout.setHorizontalGroup(
            encenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encenderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        encenderLayout.setVerticalGroup(
            encenderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, encenderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        apagar.setBackground(new java.awt.Color(18, 21, 25));
        apagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                apagarMouseClicked(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simuladorcarro/images/apagar (1).png"))); // NOI18N

        javax.swing.GroupLayout apagarLayout = new javax.swing.GroupLayout(apagar);
        apagar.setLayout(apagarLayout);
        apagarLayout.setHorizontalGroup(
            apagarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, apagarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
        );
        apagarLayout.setVerticalGroup(
            apagarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(apagarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        acelerar.setBackground(new java.awt.Color(18, 21, 25));
        acelerar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acelerarMouseClicked(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simuladorcarro/images/acelerar (1).png"))); // NOI18N

        javax.swing.GroupLayout acelerarLayout = new javax.swing.GroupLayout(acelerar);
        acelerar.setLayout(acelerarLayout);
        acelerarLayout.setHorizontalGroup(
            acelerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, acelerarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        acelerarLayout.setVerticalGroup(
            acelerarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, acelerarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        frenar.setBackground(new java.awt.Color(18, 21, 25));
        frenar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                frenarMouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simuladorcarro/images/frenar (1).png"))); // NOI18N

        javax.swing.GroupLayout frenarLayout = new javax.swing.GroupLayout(frenar);
        frenar.setLayout(frenarLayout);
        frenarLayout.setHorizontalGroup(
            frenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frenarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(9, 9, 9))
        );
        frenarLayout.setVerticalGroup(
            frenarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frenarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(18, 21, 25));

        jPanel3.setBackground(new java.awt.Color(18, 21, 25));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/simuladorcarro/images/velocimetro .jpeg"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(124, 158, 218));
        jLabel7.setText("INFORMACION");

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(124, 158, 218));
        jLabel8.setText("Motor:");

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(124, 158, 218));
        jLabel10.setText("Km actual:");

        infoMotor.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        infoMotor.setForeground(new java.awt.Color(199, 214, 240));

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(124, 158, 218));
        jLabel9.setText("Llantas:");

        infoLlantas.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        infoLlantas.setForeground(new java.awt.Color(199, 214, 240));

        infoVelocidad.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        infoVelocidad.setForeground(new java.awt.Color(199, 214, 240));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(infoMotor))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(34, 34, 34)
                                .addComponent(infoVelocidad))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(infoLlantas)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(infoMotor))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(infoLlantas))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(infoVelocidad)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(encender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(apagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(acelerar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(frenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(apagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(encender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acelerar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(frenar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Maneja el evento de clic en el botón de acelerar.
     * 
     * Solicita al usuario la cantidad de km/h a acelerar y actualiza el estado
     * del vehículo. Muestra diálogos apropiados para aceleraciones bruscas y
     * maneja posibles excepciones
     * 
     * @param evt Evento del mouse
     */
    private void acelerarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acelerarMouseClicked
         try {
            String input = JOptionPane.showInputDialog(
                this,
                "¿Cuántos Km/h desea acelerar?",
                "Acelerar vehículo",
                JOptionPane.QUESTION_MESSAGE
            );

            if (input != null && !input.isEmpty()) {
                int velocidad = Integer.parseInt(input);

                // Intentamos acelerar
                vehiculo.getMotor().acelerar(velocidad);

                // Mostrar ventana de aceleración
                acelerar ventanaAcelerar = new acelerar(this, true, this.vehiculo, this);
                ventanaAcelerar.setVisible(true);

                // Si fue una aceleración brusca, informarlo
                if (velocidad >= 30) {
                    JOptionPane.showMessageDialog(
                        this,
                        "Aceleración BRUSCA, velocidad aumentada en " + velocidad + " Km/h.",
                        "Advertencia de aceleración",
                        JOptionPane.WARNING_MESSAGE
                    );
                }

                // Mostrar velocidad actual
                JOptionPane.showMessageDialog(
                    this,
                    "Velocidad actual del vehículo: " + vehiculo.getVelocidadActual() + " Km/h",
                    "Aceleración exitosa",
                    JOptionPane.INFORMATION_MESSAGE
                );
                
                infoVelocidad.setText(vehiculo.getVelocidadActual() + " Km/h");

            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(
                this,
                "Ingrese un número válido",
                "Entrada inválida",
                JOptionPane.WARNING_MESSAGE
            );

        } catch (ApagadoExcepcion e) {
            JOptionPane.showMessageDialog(
                this,
                e.getMessage(),
                "Vehículo apagado",
                JOptionPane.WARNING_MESSAGE
            );

        } catch (AccidenteExcepcion e) {

            JOptionPane.showMessageDialog(
                this,
                e.getMessage(),
                "ACCIDENTE",
                JOptionPane.ERROR_MESSAGE
            );
            accidentado ventanaAccidente = new accidentado(this, true, this.vehiculo, this);
            ventanaAccidente.setVisible(true);
        }
    }//GEN-LAST:event_acelerarMouseClicked
    
     /**
     * Maneja el evento de clic en el botón de encender
     * 
     * Intenta encender el vehículo y muestra el resultado de la operación.
     * Reproduce el sonido de encendido si es exitoso
     * 
     * @param evt Evento del mouse
     */
    private void encenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encenderMouseClicked
        try {
            vehiculo.getMotor().encender();
            reproducirSonido("/simuladorcarro/audios/encendido.wav");
            JOptionPane.showMessageDialog(this, "El vehículo fue encendido correctamente");
        } catch (EncendidoExcepcion | AccidenteExcepcion e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error al encender", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_encenderMouseClicked
    
    /**
     * Maneja el evento de clic en el botón de apagar
     * 
     * Intenta apagar el vehículo y muestra el resultado de la operación.
     * Maneja casos especiales como vehículo ya apagado o accidente por apagado
     * a alta velocidad
     * 
     * @param evt Evento del mouse
     */
    private void apagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_apagarMouseClicked
        try {
            if(!vehiculo.isEncendido()){
                JOptionPane.showMessageDialog(
                this,
                "El vehículo ya esta apagado",
                "vehiculo apagado",
                JOptionPane.INFORMATION_MESSAGE
            );
            }
            vehiculo.getMotor().apagar();
            JOptionPane.showMessageDialog(
                this,
                "El vehículo fue apagado",
                "Apagado exitoso",
                JOptionPane.INFORMATION_MESSAGE
            );
        } catch (AccidenteExcepcion e) {
        JOptionPane.showMessageDialog(
            this,
            e.getMessage(),
            "Error al apagar",
            JOptionPane.ERROR_MESSAGE
        );
    }   catch (ApagadoExcepcion ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_apagarMouseClicked

    /**
     * Maneja el evento de clic en el botón de frenar.
     * 
     * Solicita al usuario la cantidad de km/h a frenar y actualiza el estado
     * del vehículo. Maneja diferentes casos como frenado normal, brusco y patinaje,
     * mostrando los diálogos y animaciones correspondientes
     * 
     * @param evt Evento del mouse
     */
    private void frenarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_frenarMouseClicked
        try {
           
           if (!vehiculo.isEncendido()) {
               JOptionPane.showMessageDialog(this, "vehículo apagado.", "Advertencia", JOptionPane.WARNING_MESSAGE);
               return;
           }

           if (vehiculo.isAccidentado()) {
               throw new AccidenteExcepcion("El vehículo está accidentado, no puede frenar.");
           }
           
           if (vehiculo.getVelocidadActual() == 0) {
               JOptionPane.showMessageDialog(this, "El vehículo ya está detenido.", "Frenado inválido", JOptionPane.WARNING_MESSAGE);
                return;
            }

           String input = JOptionPane.showInputDialog(this, "¿Cuántos Km/h desea frenar?", "Frenar vehículo", JOptionPane.QUESTION_MESSAGE);

           if (input != null && !input.isEmpty()) {
               int velocidad = Integer.parseInt(input);
               int velocidadActual = vehiculo.getVelocidadActual();

               // Calcular el límite mínimo entre todas las llantas
               int limiteLlantas = vehiculo.getLlantas()[0].getLimiteVelocidad();
               for (int i = 1; i < vehiculo.getLlantas().length; i++) {
                   int limite = vehiculo.getLlantas()[i].getLimiteVelocidad();
                   if (limite < limiteLlantas) {
                       limiteLlantas = limite;
                   }
               }

               boolean esFrenoBrusco = velocidad > 30;
               boolean superaLimite = velocidadActual > limiteLlantas;

               try {
                   vehiculo.getMotor().frenar(velocidad);

                   // Frenado sin patinaje
                   if (esFrenoBrusco) {
                       frenadoBrusco ventanaFrenarBrusco = new frenadoBrusco(this, true, vehiculo, this);
                       ventanaFrenarBrusco.setVisible(true);
                       JOptionPane.showMessageDialog(this, "Frenado BRUSCO realizado", "Advertencia", JOptionPane.WARNING_MESSAGE);
                   } else {
                       frenado ventanaFrenar = new frenado(this, true, vehiculo, this);
                       ventanaFrenar.setVisible(true);
                       JOptionPane.showMessageDialog(
                           this,
                           "Frenado realizado\nVelocidad actual: " + vehiculo.getVelocidadActual() + " Km/h",
                           "Frenado exitoso",
                           JOptionPane.INFORMATION_MESSAGE
                       );
                   }

                   reproducirSonido("/simuladorcarro/audios/freno.wav");

               } catch (FrenadoConPatinajeExcepcion e) {
                   
                   frenadoBrusco ventanaFrenarBrusco = new frenadoBrusco(this, true, vehiculo, this);
                   ventanaFrenarBrusco.setVisible(true);
                   JOptionPane.showMessageDialog(this, "Frenado BRUSCO realizado", "Advertencia", JOptionPane.WARNING_MESSAGE);

                   patinando ventanaPatinar = new patinando(this, true, vehiculo, this);
                   ventanaPatinar.setVisible(true);
                   JOptionPane.showMessageDialog(this, e.getMessage(), "Patinaje", JOptionPane.WARNING_MESSAGE);

                   reproducirSonido("/simuladorcarro/audios/patinando.wav");

               } catch (PatinajeExcepcion e) {
                   // Patinaje sin frenado brusco
                   patinando ventanaPatinar = new patinando(this, true, vehiculo, this);
                   ventanaPatinar.setVisible(true);
                   JOptionPane.showMessageDialog(this, e.getMessage(), "¡PATINAJE!", JOptionPane.WARNING_MESSAGE);
                   reproducirSonido("/simuladorcarro/audios/patinando.wav");
               }

               // Actualizar velocidad en pantalla
               infoVelocidad.setText(vehiculo.getVelocidadActual() + " Km/h");
           }

       } catch (NumberFormatException e) {
           JOptionPane.showMessageDialog(this, "Ingrese un número válido", "Entrada inválida", JOptionPane.WARNING_MESSAGE);

       } catch (ApagadoExcepcion | AccidenteExcepcion e) {
           accidentado ventanaAccidente = new accidentado(this, true, vehiculo, this);
           ventanaAccidente.setVisible(true);
           JOptionPane.showMessageDialog(this, e.getMessage(), "Error al frenar", JOptionPane.ERROR_MESSAGE);

       } finally {
           actualizarEstadoBotones();
       }

    }//GEN-LAST:event_frenarMouseClicked
    
    /**
     * Reproduce un sonido desde la ruta especificada.
     * 
     * @param ruta Ruta relativa del archivo de audio (formato WAV)
     */
    public void reproducirSonido(String ruta) {
        try {
            AudioInputStream audioInput = AudioSystem.getAudioInputStream(getClass().getResource(ruta));
            Clip clip = AudioSystem.getClip();
            clip.open(audioInput);
            clip.start();
        } catch (Exception e) {
            System.out.println("Error al reproducir el sonido: " + e.getMessage());
        }
    }
    /**
     * Actualiza la información del motor en la interfaz obtenido del archivo de texto
     */
    private void actualizarInfoMotor() {
        String info = "Motor: " + vehiculo.getMotor().getCilindraje() + " cc\n";              
        infoMotor.setText(info); 
    }
    /**
     * Actualiza la información de las llantas en la interfaz
     */
    private void actualizarInfoLlantas() {
        String info =  "Llantas: " + vehiculo.getLlantas()[0].getTipo();
        infoLlantas.setText(info); 
    }
     /**
     * Actualiza la información de velocidad del vehículo en la interfaz.
     */
    public void actualizarInfoVehiculo() {
        infoVelocidad.setText("Velocidad actual: " + vehiculo.getVelocidadActual() + " Km/h");
    }
    /**
     * Actualiza el estado de los botones según el estado del vehículo.
     * Deshabilita los botones de acelerar y frenar si el vehículo está accidentado.
     */
    private void actualizarEstadoBotones() {
        boolean estaAccidentado = vehiculo.isAccidentado();
        acelerar.setEnabled(!estaAccidentado);
        frenar.setEnabled(!estaAccidentado);
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel acelerar;
    private javax.swing.JPanel apagar;
    private javax.swing.JPanel encender;
    private javax.swing.JPanel frenar;
    private javax.swing.JLabel infoLlantas;
    private javax.swing.JLabel infoMotor;
    private javax.swing.JLabel infoVelocidad;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel panelPrincipal;
    // End of variables declaration//GEN-END:variables
}
